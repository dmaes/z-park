[
    {
        "id": "8c453b60.27eb78",
        "type": "tab",
        "label": "Flow 3",
        "disabled": false,
        "info": ""
    },
    {
        "id": "d9522584.a91db",
        "type": "debug",
        "z": "8c453b60.27eb78",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 570,
        "y": 60,
        "wires": []
    },
    {
        "id": "a2d57733.47252",
        "type": "function",
        "z": "8c453b60.27eb78",
        "name": "add_to_parking",
        "func": "let initParking = {\n    'locations':{}\n};\n\nlet parking = global.get('parking') || initParking;\nparking.locations[msg.payload.location] = msg.payload;\nglobal.set('parking', parking);\nmsg.payload = parking;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 330,
        "y": 60,
        "wires": [
            [
                "d9522584.a91db"
            ]
        ]
    },
    {
        "id": "1d56349c.0d8743",
        "type": "http in",
        "z": "8c453b60.27eb78",
        "name": "GET_empty_spots",
        "url": "/parking/api/empty_spots",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 180,
        "wires": [
            [
                "4641b2df.586734"
            ]
        ]
    },
    {
        "id": "4641b2df.586734",
        "type": "function",
        "z": "8c453b60.27eb78",
        "name": "get_empty_spots",
        "func": "let parking_map = {\n    1: {\n        'floor': 0,\n        'place': 'A1'\n    },\n    2: {\n        'floor': 0,\n        'place': 'A2'\n    }\n}\nlet res = {\n    'empty_places': []\n};\nlet parking = global.get('parking');\nfor (var place in parking.locations) {\n    if(parking.locations[place].available) {\n        res.empty_places.push(parking_map[place]);\n    }\n}\nres.suggested = res.empty_places[0];\nres.empty_places.splice(0,1);\nmsg.payload = res;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 330,
        "y": 180,
        "wires": [
            [
                "d9522584.a91db",
                "2eba2462.e73e8c"
            ]
        ]
    },
    {
        "id": "2eba2462.e73e8c",
        "type": "http response",
        "z": "8c453b60.27eb78",
        "name": "empty_spots",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json",
            "Access-Control-Allow-Origin": "*"
        },
        "x": 590,
        "y": 180,
        "wires": []
    },
    {
        "id": "d5793da1.232bf8",
        "type": "ibmiot in",
        "z": "8c453b60.27eb78",
        "authentication": "boundService",
        "apiKey": "",
        "inputType": "evt",
        "logicalInterface": "",
        "ruleId": "",
        "deviceId": "arduino_test",
        "applicationId": "",
        "deviceType": "MQTT-device",
        "eventType": "+",
        "commandType": "",
        "format": "json",
        "name": "MQTT-devices",
        "service": "registered",
        "allDevices": true,
        "allApplications": "",
        "allDeviceTypes": true,
        "allLogicalInterfaces": "",
        "allEvents": true,
        "allCommands": "",
        "allFormats": "",
        "qos": 0,
        "x": 100,
        "y": 60,
        "wires": [
            [
                "a2d57733.47252"
            ]
        ]
    },
    {
        "id": "62ad08e0.f2e03",
        "type": "http in",
        "z": "8c453b60.27eb78",
        "name": "GET_welcome",
        "url": "/parking/welcome",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 260,
        "wires": [
            [
                "17d8573e.dfdeb1"
            ]
        ]
    },
    {
        "id": "bba93d6b.59e7b8",
        "type": "http response",
        "z": "8c453b60.27eb78",
        "name": "welcome",
        "statusCode": "200",
        "headers": {
            "content-type": "text/html"
        },
        "x": 480,
        "y": 260,
        "wires": []
    },
    {
        "id": "17d8573e.dfdeb1",
        "type": "template",
        "z": "8c453b60.27eb78",
        "name": "welcome",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "plain",
        "template": "<!DOCTYPE HTML>\n<html lang=\"en\">\n<head>\n<meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n<!--    <link rel=\"stylesheet\" type=\"text/css\" href=\"resources/css/style.css\">-->\n    <script src=\"https://code.jquery.com/jquery-3.3.1.min.js\"\n            integrity=\"sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8=\"\n            crossorigin=\"anonymous\"></script>\n    <title>zPark</title>\n    <style>\n        html {\n            background-color: #18123E;\n            height: 100%;\n        }\n\n        body {\n            width: 75%;\n            margin: auto;\n        }\n\n        header{\n            /*    background-image: url(\"../img/zparkBanner.png\");\n                background-repeat: no-repeat;\n                --background-size: 80% ;\n                background-position: center;*/\n            background-color: azure;\n            height: 250px;\n            border-style: solid;\n            border-color: #eac67a;\n            border-width: 1em;\n            border-radius: 1em;\n            margin: auto;\n            text-align: center;\n            vertical-align: middle;\n            width: 50%;\n            margin-top: 1rem;\n        }\n\n        header > img {\n            height: 90%;\n            margin: 0.5rem;\n        }\n\n        main {\n\n            display: grid;\n            grid-template-columns: auto auto ;\n            grid-column-gap: 0.8em ;\n            grid-row-gap: 0.8em ;\n            margin: 20px auto;\n            padding: 20px;\n            background-color: #984B43;\n            border-style: solid;\n            border-color: #eac67a;\n            border-width: 1em;\n            border-radius: 1em;\n            font-size: 1.3rem;\n        }\n\n        .tableDiv {\n            font-size: 1.5rem;\n        }\n\n        th, td {\n            padding-right: 1rem\n        }\n\n        .floor {\n            margin-bottom: 0.5rem;\n        }\n\n\n\n        h2.intro{\n            grid-column-start: 1;\n            grid-column-end: 3;\n            margin: auto;\n            text-align: center;\n            color: lightgray;\n            font-family: \"Titillium\";\n\n\n        }\n\n        div.floor, div.place, div.numberFloor, div.numberSpot {\n            background-color: #ff999b;\n            padding: 1em;\n            border-style: solid;\n\n            /*    border-color: none;\n\n                border-width: 0.4em;*/\n            border-radius: 0.4em;\n            text-align: center;\n            font-size: 2em;\n\n\n        }\n    </style>\n</head>\n<body>\n    <header>\n<!--        <img src=\"resources/img/logo.png\">-->\n        <img src=\"https://github.com/dmaes/z-park/raw/master/logo.png\">\n    </header>\n    <main class=\"centered\">\n        <div class= \"grid\">\n            <h2 class=\"intro\">The Best Spot For You</h2><br>\n            <div class = \"floor\"> Verdieping: <span class=\"numberFloor\" id=\"suggested_floor\"></span></div>\n            <div class = \"place\"> Nummer: <span class = \"numberSpot\" id=\"suggested_spot\"></span></div>\n        </div>\n\n        <div class =\"tableDiv\">\n            <br>\n            <h2 class = \"extra\">Ook beschikbaar:</h2>\n            <table id=\"also_available_table\">\n                <tr>\n                    <th>Verdieping</th>\n                    <th>Nummer</th>\n                </tr>\n            </table>\n         </div>\n    </main>\n</body>\n<script>\nmain();\n\nfunction getEmptySpots() {\n    $.ajax({\n        url: 'https://z-park.eu-gb.mybluemix.net/parking/api/empty_spots',\n        type: 'GET'\n    }).done(function (data, textStatus, jqXHR) {\n        displaySuggested(data.suggested);\n        displayEmptySpots(data.empty_places);\n        setTimeout(getEmptySpots, 1000)\n    }).fail(function (jqXHR, textStatus, errorThrown) {\n        console.log(\"HTTP Request failed with code \" + jqXHR.status);\n        console.log(\"Thrown error: \" + errorThrown);\n    });\n}\n\nfunction displayEmptySpots(emptySpots) {\n    let html = '<tr><th>Verdieping</th><th>Nummer</th></tr>';\n    for(var spot in emptySpots) {\n        html += '<tr><td>';\n        html += emptySpots[spot].floor;\n        html += '</td><td>';\n        html += emptySpots[spot].place;\n        html += '</td></tr>';\n    }\n    $('#also_available_table').html(html);\n}\n\nfunction displaySuggested(suggested) {\n    $('#suggested_floor').text(suggested.floor);\n    $('#suggested_spot').text(suggested.place);\n}\n\nfunction main() {\n    getEmptySpots();\n}\n\n</script>\n</html>",
        "output": "str",
        "x": 300,
        "y": 260,
        "wires": [
            [
                "bba93d6b.59e7b8"
            ]
        ]
    }
]